{"version":3,"sources":["catposts.jsx","homeposts.jsx","pagehero.jsx"],"names":["CatPost","React","createClass","displayName","render","PostImageStyle","backgroundImage","this","props","postData","featured_image","createElement","className","style","href","link","title","rendered","CatPosts","getInitialState","show","category","componentDidMount","cachedCatPosts","JSON","parse","localStorage","getItem","cachedCatPostsTs","useCache","now","Date","getTime","toString","cacheAge","setState","jQuery","ajax","url","state","dataType","success","data","setItem","stringify","bind","error","xhr","status","err","console","showMore","evt","parseInt","slice","map","item","key","id","onClick","Post","PostStyle","height","width","backgroundSize","PostsLoader","allPosts","cachedAllPosts","cachedAllPostsTs","PageHero","pagedata","slug"],"mappings":"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","file":"all.js","sourcesContent":["    var CatPost = React.createClass({\n\n\n        render: function(){\n\n            var PostStyle = {\n                height: 280\n            }\n\n            var PostImageStyle = {\n                backgroundImage: 'url('+this.props.postData.featured_image[0]+')',\n            }\n\n\n            return (\n                <div className=\"top-post-box\">\n                    <article className=\"post\">\n                        <div style={PostImageStyle} className=\"imgsection\">\n                            <a href={this.props.postData.link} className=\"imagelink\" ></a>\n                        </div>\n                        <div className=\"textsection\">\n                            <div className=\"catname\">A category</div>\n                            <h2>\n                                <a href={this.props.postData.link} className=\"title\">\n                                    {this.props.postData.title.rendered}\n                                </a>\n                            </h2>\n                        </div>\n                        <div className=\"cb\"></div>\n                    </article>\n                </div>\n            );\n        }\n\n    });\n\n    var CatPosts = React.createClass({\n\n        getInitialState: function() {\n            return {\n                show: this.props.show,\n                category: this.props.category,\n                CatPosts: []\n            }\n        },\n\n        componentDidMount: function() {\n\n            var cachedCatPosts = JSON.parse(localStorage.getItem('CatPosts'));\n            var cachedCatPostsTs = JSON.parse(localStorage.getItem('CatPostsTs'));\n            var useCache = false;\n\n            if(typeof cachedCatPosts != 'undefined' && typeof cachedCatPostsTs != 'undefined'){\n\n                var now = new Date().getTime().toString();\n                var cacheAge = now - cachedCatPostsTs;\n\n                if(cacheAge < 1000 * 3){\n                    useCache = true;\n                }\n            }\n\n            if(useCache){\n\n                this.setState({CatPosts: cachedCatPosts});\n\n            } else {\n\n                jQuery.ajax({\n                    url: 'http://dtfc.wethinkdigital.co.uk/api/category/'+this.state.category,\n                    dataType: 'json',\n                    success: function(data) {\n                        this.setState({CatPosts: data});\n\n                        localStorage.setItem('CatPosts', JSON.stringify(data));\n                        localStorage.setItem('CatPostsTs', new Date().getTime());\n\n                    }.bind(this),\n                    error: function(xhr, status, err) {\n                        console.error(status, err.toString());\n                    }.bind(this)\n                });\n\n            }\n\n        },\n\n        showMore: function(evt) {\n            this.setState({\n                show: parseInt(this.state.show) + parseInt(this.props.show)\n            });\n        },\n\n        render: function() {\n\n            return (\n                \n                <div className=\"posts row\">\n                {this.state.CatPosts.slice(0,this.state.show).map(function(item) {\n                   return <CatPost key={item.id} postData={item}/>;\n                })}\n                    <button className=\"btn btn-primary\"  onClick={this.showMore} >More!</button>\n              </div>\n\n            );\n\n\n        }\n\n    });\n\n    ","    var Post = React.createClass({\n\n\n        render: function(){\n\n            var PostStyle = {\n                height: 280\n            }\n\n            var PostImageStyle = {\n                width: '100%',\n                height: 190,\n                backgroundImage: 'url('+this.props.postData.featured_image[0]+')',\n                backgroundSize: 'cover'\n            }\n\n            return (\n                <div className=\"col-sm-6\">\n                    <div className=\"card\" style={PostStyle}>\n                        <a href={this.props.postData.link} className=\"imagelink\">\n                            <div style={PostImageStyle} className=\"card-img-top\"></div>\n                        </a>\n                        <div className=\"card-block\">\n                            <h6 className=\"card-title\">\n                                <a href={this.props.postData.link} className=\"title\">\n                                    {this.props.postData.title.rendered}\n                                </a>\n                            </h6>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n    });\n\n    var PostsLoader = React.createClass({\n\n        getInitialState: function() {\n            return {\n                show: this.props.show,\n                allPosts: []\n            }\n        },\n\n        componentDidMount: function() {\n\n            var cachedAllPosts = JSON.parse(localStorage.getItem('allPosts'));\n            var cachedAllPostsTs = JSON.parse(localStorage.getItem('allPostsTs'));\n            var useCache = false;\n\n            if(typeof cachedAllPosts != 'undefined' && typeof cachedAllPostsTs != 'undefined'){\n\n                var now = new Date().getTime().toString();\n                var cacheAge = now - cachedAllPostsTs;\n\n                if(cacheAge < 1000 * 3){\n                    useCache = true;\n                }\n            }\n\n            if(useCache){\n\n                this.setState({allPosts: cachedAllPosts});\n\n            } else {\n\n                jQuery.ajax({\n                    url: 'https://www.dreamteamfc.com/c/wp-json/wp/v2/posts?per_page=54',\n                    dataType: 'json',\n                    success: function(data) {\n                        this.setState({allPosts: data});\n\n                        localStorage.setItem('allPosts', JSON.stringify(data));\n                        localStorage.setItem('allPostsTs', new Date().getTime());\n\n                    }.bind(this),\n                    error: function(xhr, status, err) {\n                        console.error(status, err.toString());\n                    }.bind(this)\n                });\n\n            }\n\n        },\n\n        showMore: function(evt) {\n            this.setState({\n                show: parseInt(this.state.show) + parseInt(this.props.show)\n            });\n        },\n\n        render: function() {\n\n            return (\n                \n                <div className=\"posts row\">\n                {this.state.allPosts.slice(0,this.state.show).map(function(item) {\n                   return <Post key={item.id} postData={item}/>;\n                })}\n                    <button className=\"btn btn-primary\"  onClick={this.showMore} >More!</button>\n              </div>\n\n            );\n\n\n        }\n\n    });\n\n    ","var PageHero = React.createClass({\n\n\tgetInitialState: function(){\n\t\treturn {\n\t\t\tpagedata: {\n\t\t\t\ttitle: {\n\t\t\t\t\trendered: 'Hero title'\n\t\t\t\t}\n\t\t\t},\n\t\t\tslug: this.props.slug\n\t\t}\n\t},\n\n\t// componentDidMount: function(){\n\t// \t$.ajax({\n\t// \t\turl: 'https://www.dreamteamfc.com/c/wp-json/wp/v2/pages?filter[name]='+this.state.slug,\n\t// \t\tdataType: 'json',\n\t// \t\tsuccess: function(data) {\n\t// \t\t   this.setState({pagedata: data[0]});\n\t// \t\t}.bind(this),\n\t// \t\terror: function(xhr, status, err) {\n\t// \t\t   console.error(status, err.toString());\n\t// \t\t}.bind(this)\n\t// \t});\n\n\t// },\n\n\trender: function(){\n\n\t\treturn (\n\t\t\t<div className=\"col-sm-12\">\n\t\t\t\t<h1>{this.state.pagedata.title.rendered}</h1>\n\t\t\t</div>\n\t\t);\n\t}\n\n\n});"],"sourceRoot":"/source/"}